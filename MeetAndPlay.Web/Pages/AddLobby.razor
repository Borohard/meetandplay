@page "/AddLobby/{Id}"
@page "/AddLobby"
@using MeetAndPlay.Core.Infrastructure.Extensions
@using MeetAndPlay.Data.Enums
@using MeetAndPlay.Core.Abstraction.Services
@using AutoMapper
@using MeetAndPlay.Data.Models.Games
@using MeetAndPlay.Data.Models.Offers
@using MeetAndPlay.Web.ViewModels
@attribute [Authorize]
@inject ILobbyService LobbyService
@inject IGamesService GamesService
@inject IMapper Mapper

<div class="my-4">
    <h3>@PageName</h3>
</div>
<EditForm Model="@_lobbyModel">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div class="form-group">
        <label>
            Выберите игры
        </label>
        <Select2 TItem="Game"
                 Id="games-select"
                 IsMultiple="@true"
                 TextExpression="@(item => item.Name)"
                 Source="@GamesService"
                 @bind-Values="@_lobbyModel.Games">
        </Select2>
    </div>
    <div class="form-group">
        <label>
            Выберите уровень игры <small>необязательно</small>
        </label>
        <select class="form-control" @bind="@_lobbyModel.GameLevel">
            @foreach (GameLevel value in Enum.GetValues(typeof(GameLevel)))
            {
                <option value="@value">@value.GetDescription()</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label>
            Какое необходимое количество участников для игры?
        </label>
        <input type="number" class="form-control" @bind=@_lobbyModel.MaxPlayersCount placeholder="Введите количество человек">
    </div>
    <div class="form-group">
        <label>
            Сколько вас уже человек? <small>необязательно</small>
        </label>
        <input type="number" class="form-control" @bind=@_lobbyModel.CurrentPlayersCount placeholder="Введите количество человек">
    </div>
    <div class="form-group">
        <label>
            Когда вы планируете поиграть?
        </label>
        <RadzenDatePicker @bind-Value=@_lobbyModel.PlannedGameDate DateFormat="d" Change="EventCallback<DateTime?>.Empty" Placeholder="Выберите дату"/>
    </div>

    <div class="form-group">
        <label>
            Где бы вы хотели поиграть? <small>необязательно</small>
        </label>
        <select class="form-control" @bind="@_lobbyModel.PlaceType">
            @foreach (PlaceType value in Enum.GetValues(typeof(PlaceType)))
            {
                <option value="@value">@value.GetDescription()</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label>
            Ваши пожелания <small>необязательно</small>
        </label>
        <textarea class="form-control" @bind=@_lobbyModel.Description rows="3"></textarea>
    </div>
    <div class="form-group">
        <label>
            Название встречи <small>необязательно</small>
        </label>
        <input type="text" class="form-control" @bind=@_lobbyModel.Title>
    </div>

    <div class="form-group">
        <button class="btn btn-warning bg-lightyellow" type="submit">@SubmitName</button>
    </div>
</EditForm>




@code {

    [Parameter]
    public string Id { get; set; }

    private bool IsUpdating => Id != null;
    private string PageName => IsUpdating ? "Обновить лобби" : "Создать лобби";
    private string SubmitName => IsUpdating ? "Обновить" : "Создать";

    private AddLobbyViewModel _lobbyModel = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null && Guid.TryParse(Id, out var parsedId))
        {
            var lobby = await LobbyService.GetLobbyByIdAsync(parsedId);
            _lobbyModel = Mapper.Map<AddLobbyViewModel>(lobby);
        }
    }

    private async Task AddAsync()
    {
        var lobby = Mapper.Map<Lobby>(_lobbyModel);
    }
}